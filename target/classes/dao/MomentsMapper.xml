<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.MomentsMapper">
    <resultMap id="BaseResultMap" type="model.Moments">
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="time" jdbcType="VARCHAR" property="time" />
        <result column="location" jdbcType="VARCHAR" property="location" />
        <result column="directory" jdbcType="VARCHAR" property="directory" />
        <result column="avatarUrl" jdbcType="VARCHAR" property="avatarUrl" />
    </resultMap>
    <!--<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mblc.seo.cms.htmlgen.model.CmsStaticData">-->
        <!--<result column="json" jdbcType="LONGVARCHAR" property="json" />-->
    <!--</resultMap>-->
    <select id="queryAll"  resultMap="BaseResultMap">
          <!--  select content, time, location, directory, avatarUrl from moments JOIN couple
         on moments.openid = couple.cpA or moments.openid =  couple.cpB
         where couple.cpA=#{openid} or couple.cpB = #{openid}-->
        select content, time, location, directory, avatarUrl from moments order by TIME desc
    </select>

    <select id="queryAvatarUrlList"  resultType="java.lang.String">
        select DISTINCT avatarUrl from moments
    </select>

    <select id="queryOne" parameterType="string" resultMap="BaseResultMap">
        select * from moments where openid=#{openid}
    </select>
    <insert id="insertOne" parameterType="model.Moments">
        insert into moments(content, time, location, directory, avatarUrl)
        values(#{content}, #{time}, #{location}, #{directory},  #{avatarUrl})
    </insert>
    <delete id="deleteOne" parameterType="java.lang.String">
        DELETE FROM moments WHERE time = #{time}
    </delete>
</mapper>